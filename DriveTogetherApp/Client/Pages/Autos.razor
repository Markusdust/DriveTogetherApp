@page "/meine-autos"
@using System.Security.Claims
@inject IAutoService AutoService
@inject AuthenticationStateProvider AuthenticationStateProvider

<NavLink class="btn btn-primary" href="/erstellen-auto">Neues Auto erstellen</NavLink>

@if (autos == null)
{
    <p>Loading...</p>
}
else
{
    <h4>Meine Autos</h4>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Marke</th>
                <th>Modell</th>
                <!-- Weitere Spalten nach Bedarf -->
            </tr>
        </thead>
        <tbody>
            @foreach (var auto in autos)
            {
                <tr>
                    <td>
                        <a href="/auto/@auto.AutoId">@auto.AutoId</a>
                    </td>
                    <td>@auto.Marke</td>
                    <td>@auto.Modell</td>
                    <!-- Weitere Zellen nach Bedarf -->
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Auto> autos;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        Console.WriteLine(userId);

        if (!string.IsNullOrEmpty(userId))
        {
            var response = await AutoService.GetAutosByUserId(userId);
            if (response != null && response.Data != null)
            {
                autos = response.Data;
            }
        }
    }
}